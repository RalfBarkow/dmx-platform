maven-build:
  image: container-registry.dmx.systems/dmx-intern/docker-images/maven-npm-nodejs
  stage: build
  tags:
    - docker
  script:
    - export MAVEN_OPTS="-Xmx512m"
    - node -v
    - npm -v
    - mvn clean install -P all,dist
    - echo "BUILD_JOB_ID=${CI_JOB_ID}" > modules/dmx-distribution/target/.build_job_id.env
  artifacts:
    paths:
      - modules/dmx-distribution/target/*.zip

javadoc:
  stage: build
  script:
    - export MAVEN_OPTS="-Xmx512m"
    - mvn -P all javadoc:aggregate
    - rsync -a --delete target/site/apidocs/ /var/www/apidocs.dmx.systems/apidocs/

copy-ci:
  stage: deploy
  tags:
    - shell
  script:
    - DISTDIR='modules/dmx-distribution/target'
    - source S{DISTDIR}/.build_job_id.env
    - rm S{DISTDIR}/.build_job_id.env
    - WEBCGI='https://download.dmx.systems/cgi-bin/v1/deploy-version.cgi?'
    - ZIPFILE="$( basename $(ls ${DISTDIR}/dmx-*.zip | tail -n1) )"
    - APPEND="$( date +%F )_${CI_PIPELINE_ID}"
    - PARAMS=("&append=${APPEND}&project=${CI_PROJECT_NAME}&tag=none")
    - RESULT="$( wget --server-response -q -O - "${WEBCGI}/${CI_PROJECT_PATH}/-/jobs/${BUILD_JOB_ID}/artifacts/raw/${DISTDIR}/${ZIPFILE}${PARAMS}" 2>&1 | head -n1 )"
    - echo "RESULT=${RESULT}"
  dependencies:
    - maven-build
  only:
    - master
    - main

copy-release:
  stage: deploy
  dependencies:
    - maven-build
  script:
    - DISTDIR='modules/dmx-distribution/target'
    - ZIPFILE="$( ls ${DISTDIR}/dmx-*.zip )"
    - echo "ZIPFILE = ${ZIPFILE}"
    - cp ${ZIPFILE} /var/www/download.dmx.systems/dmx-${CI_COMMIT_TAG}.zip
  only:
    - tags

deploy-to-gitlab-maven:
  image: container-registry.dmx.systems/dmx-intern/docker-images/maven-npm-nodejs
  stage: deploy
  tags:
    - docker
  script:
    - 'mvn -Pall,gitlab-maven-deployment deploy -DskipTests=true -s ci_settings.xml '
  only:
    - master
    - main
    - dm4

deploy-to-central:
  stage: deploy
  script:
    - export MAVEN_OPTS="-Xmx512m"
    - mvn clean deploy -P release
  only:
    - tags

trigger-deb-project:
  stage: deploy
  trigger: dmx-platform/dmx-build-deb
  only:
    - master
  except:
    - tags

trigger-docker-project:
  stage: deploy
  trigger: dmx-contrib/dmx-docker
  only:
    - master
  except:
    - tags
