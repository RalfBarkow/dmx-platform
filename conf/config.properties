### DMX Configuration ###


## Webserver ##

org.osgi.service.http.port = 8080
org.apache.felix.http.enable = true

# Session timeout in minutes. Set 0 for no timeout.
org.apache.felix.http.session.timeout = 0

# HTTPS
org.osgi.service.http.port.secure = 8443

# To enable HTTPS set this to "true"
org.apache.felix.https.enable = false

# The **Keystore Password** (as entered in the `keytool`)
org.apache.felix.https.keystore.password = 

# The **Key Password** (as entered in the `keytool`)
org.apache.felix.https.keystore.key.password = 

# WebSockets

# The URL a client uses to connect to the WebSockets server
dmx.websockets.url = ws://localhost:8080/websocket


## Request Filter ##

# Filter for anonymous read (that is GET) requests.
# "ALL" allows all anonymous read requests. This is the default.
# "NONE" allows no anonymous read requests.
# To allow specific anonymous read requests set a comma-separated list of URI-prefixes.
# Each prefix must begin with slash but have *no* slash at the end, e.g. "/eu.crowd-literature, /crowd".
# (To each prefix a slash is appended automatically.)
# Spaces, tabs, and line breaks are allowed. IMPORTANT: line breaks must be escaped with backslash (\).
dmx.security.anonymous_read_allowed = ALL

# Filter for anonymous write (that is POST, PUT, DELETE) requests.
# "ALL" allows all anonymous write requests.
# "NONE" allows no anonymous write requests. This is the default.
# To allow specific anonymous write requests set a comma-separated list of URI-prefixes.
# Each prefix must begin with slash but have *no* slash at the end, e.g. "/eu.crowd-literature, /crowd".
# (To each prefix a slash is appended automatically.)
# Spaces, tabs, and line breaks are allowed. IMPORTANT: line breaks must be escaped with backslash (\).
dmx.security.anonymous_write_allowed = NONE

# Requests are allowed from this subnet only.
# An address range denoted by network number and netmask.
# To allow local access only set "127.0.0.1/32". This is the default.
# To allow global access set "0.0.0.0/0".
dmx.security.subnet_filter = 127.0.0.1/32


## User Accounts ##

# The account manager to use when creating new user accounts.
# Default is "DMX" which stands for DMX's own account manager (DMX-db based).
# Alternatives are e.g. "LDAP"; requires installation of "dmx-ldap" plugin.
# Note: regardless of this setting the DMX platform's "admin" user account is always created by "DMX".
dmx.accountmanagement.manager = DMX

# The initial password for the "admin" user account.
# Note: this setting is only evaluated while the first DMX start.
# Once started the admin password can be changed interactively (using the Webclient).
dmx.security.initial_admin_password = 

# If true newly created user accounts are enabled instantly. This is the default.
# If false user accounts must be manually enabled by an administrator (using the Webclient).
dmx.security.new_accounts_are_enabled = true

# Optional: a site-specific salt value DMX adds to the user-specific salt values (as stored in DB). Default is empty
# string. For increased password protection set it to a random string and keep it secret. If not set the user's
# passwords are still salted and hashed individually.
# You can set this value any time, also if user accounts are in use already. Once set, an existing password is rehashed
# on the next occasion the respective user logs in.
#
# IMPORTANT: once this value is set (and a user had logged it afterwards) you must NOT change this value anymore.
# Otherwise users can't login anymore.
dmx.security.site_salt = 


## Workspace Sharing Modes ##

# When a user creates a workspace only the enabled sharing modes will be available.
# By default all sharing modes are enabled.
# Note: individual (per-user) sharing modes can be configured by an administrator (using the Webclient).
dmx.workspaces.private.enabled = true
dmx.workspaces.confidential.enabled = true
dmx.workspaces.collaborative.enabled = true
dmx.workspaces.public.enabled = true
dmx.workspaces.common.enabled = true


## File Repository ##

# The file repository's base path: an absolute path leading to a directory, *no* slash at the end.
# This directory must exist. To enable the entire file system set "/". This is the default.
# Windows users: you can use slashes or backslashes, backslashes must be written as "\\" though.
# You can add a drive letter; if you do not "C:" is assumed.
#
# IMPORTANT: the default value ("/") is suited for a *local* (single-user) DMX installation only.
# For a *networked* installation on the other hand you MUST change this value.
# Otherwise DMX would make the server's entire file system HTTP accessible!
dmx.filerepo.path = /

# Set to "true" to put the file repository under access control.
# DMX then creates a separate file repository for each workspace beneath the base path.
# This allows for e.g. private and collaborative file repositories.
# If set to "false" (the default) there is one public file repository shared by all users.
# Use this also for a local single-user DMX installation.
#
# IMPORTANT: the default value ("false") is suited for a *local* (single-user) DMX installation.
# For a *networked* (multi-user) installation on the other hand, you might want change this value to "true",
# unless you deliberately want to provide a public file repository.
dmx.filerepo.per_workspace = false

# Standard disk quota (for file uploads) allocated to each user (in MB).
# Set -1 for no disk quota (unlimited uploads). This is the default.
# DMX admins can configure individual (per-user) disk quotas via Webclient.
# Note: to enable file uploads you need to install the "DMX File Upload" plugin (see https://dmx.berlin/plugins/).
dmx.filerepo.disk_quota = -1


## Hot Deployment ##

# DMX plugins (jar files) from this directory are hot deployed (like any other OSGi bundle).
# You can add further directories here, separated by comma. Also you can remove the standard directory
# ("bundle-deploy") if you like.
# Spaces, tabs, and line breaks are allowed. IMPORTANT: line breaks must be escaped with backslash (\).
felix.fileinstall.dir = bundle-deploy


## Host ##

# The URL (protocol, host, port) by which this DMX server is accessible from "outside".
# Some plugins make use of it when creating absolute DMX URLs, e.g. as sent in emails.
# This setting is of particular interest when DMX runs behind a reverse proxy.
# Format is <protocol>://<host>[:port]. No slash at end.
dmx.host.url = http://localhost:8080


## Webservice ##

# Only these 2 values are supported:
#     /     For use with Apache Felix HTTP (the default)
#     /*    For use with OPS4J Pax Web
dmx.webservice.path = /


## Database ##

dmx.database.path = dmx-db
dmx.database.keep_tx_log = 2 days


## Logging ##

java.util.logging.config.file = conf/logging.properties

# To see any Felix/File Install logging set the level to at least 4
felix.log.level = 0
felix.fileinstall.log.level = 0


## Encoding ##

file.encoding = UTF-8


## Time Zone ##

# The time zone used whenever DMX transforms (at server-side) a timestamp into readable text, e.g.
# "May 22, 2023 4:35:39 PM". This applies e.g. to the timestamps appearing in the DMX log file. If not configured
# DMX uses the time zone of the underlying OS. You can use all values recognized by the JVM, basically this list:
# https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List
# You can either use the "TZ identifier", e.g. "America/Mexico_City", or the "Time zone abbreviation", e.g. "CST"
# (Central Standard Time) or "CET" (Central European Time). If you use an illegal value, the time zone of the
# underlying OS is used.
# Note 1: you're not required to care about daylight saving time as this is done by the JVM resp. the underlying OS
# already. Do *not* use e.g. "CDT" (Central Daylight Time) or "CEST" (Central European Summer Time).
# Note 2: at startup DMX logs both, the timezone effectively in use, as well as all available time zones. Look for
# "JVM defaults".
# user.timezone = CET


## OSGi Container ##

felix.auto.deploy.action = install,start
org.osgi.framework.storage = bundle-cache
org.osgi.framework.bootdelegation = javax.xml.*,org.xml.*,org.w3c.dom
org.osgi.framework.system.capabilities.extra = osgi.ee;\
    osgi.ee="JavaSE";\
    version:List<Version>="1.0,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8"
org.osgi.framework.system.packages.extra = \
    javax.activation,\
    javax.annotation,\
    javax.annotation.processing,\
    javax.crypto,\
    javax.crypto.spec,\
    javax.imageio,\
    javax.imageio.spi,\
    javax.imageio.stream,\
    javax.lang.model,\
    javax.lang.model.element,\
    javax.lang.model.type,\
    javax.lang.model.util,\
    javax.management,\
    javax.management.modelmbean,\
    javax.management.remote,\
    javax.naming,\
    javax.naming.directory,\
    javax.naming.ldap,\
    javax.net,\
    javax.net.ssl,\
    javax.security.auth,\
    javax.security.auth.callback,\
    javax.security.auth.x500,\
    javax.security.cert,\
    javax.security.sasl,\
    javax.sound.sampled,\
    javax.sql,\
    javax.tools,\
    javax.xml.datatype,\
    javax.xml.namespace,\
    javax.xml.parsers,\
    javax.xml.stream,\
    javax.xml.stream.events,\
    javax.xml.stream.util,\
    javax.xml.transform,\
    javax.xml.transform.dom,\
    javax.xml.transform.sax,\
    javax.xml.transform.stream,\
    javax.xml.validation,\
    javax.xml.xpath,\
    org.w3c.dom,\
    org.xml.sax,\
    org.xml.sax.ext,\
    org.xml.sax.helpers
