### DMX Configuration ###


## Webserver ##

org.osgi.service.http.port = ${org.osgi.service.http.port}
org.apache.felix.http.enable = ${org.apache.felix.http.enable}

# Session timeout in minutes. Set 0 for no timeout.
org.apache.felix.http.session.timeout = ${org.apache.felix.http.session.timeout}

# HTTPS
org.osgi.service.http.port.secure = ${org.osgi.service.http.port.secure}

# To enable HTTPS set this to "true"
org.apache.felix.https.enable = ${org.apache.felix.https.enable}

# The **Keystore Password** (as entered in the `keytool`)
org.apache.felix.https.keystore.password = ${org.apache.felix.https.keystore.password}

# The **Key Password** (as entered in the `keytool`)
org.apache.felix.https.keystore.key.password = ${org.apache.felix.https.keystore.key.password}

# WebSockets

# The URL a client uses to connect to the WebSockets server
dmx.websockets.url = ${dmx.websockets.url}


## Request Filter ##

# Filter for anonymous read (that is GET) requests.
# "ALL" allows all anonymous read requests. This is the default.
# "NONE" allows no anonymous read requests.
# To allow specific anonymous read requests set a comma-separated list of URI-prefixes.
# Each prefix must begin with slash but have *no* slash at the end, e.g. "/eu.crowd-literature, /crowd".
# (To each prefix a slash is appended automatically.)
# Spaces, tabs, and line breaks are allowed. IMPORTANT: line breaks must be escaped with backslash (\).
dmx.security.anonymous_read_allowed = ${dmx.security.anonymous_read_allowed}

# Filter for anonymous write (that is POST, PUT, DELETE) requests.
# "ALL" allows all anonymous write requests.
# "NONE" allows no anonymous write requests. This is the default.
# To allow specific anonymous write requests set a comma-separated list of URI-prefixes.
# Each prefix must begin with slash but have *no* slash at the end, e.g. "/eu.crowd-literature, /crowd".
# (To each prefix a slash is appended automatically.)
# Spaces, tabs, and line breaks are allowed. IMPORTANT: line breaks must be escaped with backslash (\).
dmx.security.anonymous_write_allowed = ${dmx.security.anonymous_write_allowed}

# Requests are allowed from this subnet only.
# An address range denoted by network number and netmask.
# To allow local access only set "127.0.0.1/32". This is the default.
# To allow global access set "0.0.0.0/0".
dmx.security.subnet_filter = ${dmx.security.subnet_filter}


## User Accounts ##

# The initial password for the "admin" user account.
# Note: this setting is only evaluated while the first DMX start.
# Once started the admin password can be changed interactively (using the Webclient).
dmx.security.initial_admin_password = ${dmx.security.initial_admin_password}

# If true newly created user accounts are enabled instantly. This is the default.
# If false user accounts must be manually enabled by an administrator (using the Webclient).
dmx.security.new_accounts_are_enabled = ${dmx.security.new_accounts_are_enabled}

# LDAP
dmx.ldap.protocol = ${dmx.ldap.protocol}
dmx.ldap.server = ${dmx.ldap.server}
dmx.ldap.port = ${dmx.ldap.port}
dmx.ldap.manager = ${dmx.ldap.manager}
dmx.ldap.password = ${dmx.ldap.password}
dmx.ldap.user_base = ${dmx.ldap.user_base}
dmx.ldap.user_attribute = ${dmx.ldap.user_attribute}
dmx.ldap.user_filter = ${dmx.ldap.user_filter}
dmx.ldap.user_member_group = ${dmx.ldap.user_member_group}
dmx.ldap.logging = ${dmx.ldap.logging}


## Workspace Sharing Modes ##

# When a user creates a workspace only the enabled sharing modes will be available.
# By default all sharing modes are enabled.
# Note: individual (per-user) sharing modes can be configured by an administrator (using the Webclient).
dmx.workspaces.private.enabled = ${dmx.workspaces.private.enabled}
dmx.workspaces.confidential.enabled = ${dmx.workspaces.confidential.enabled}
dmx.workspaces.collaborative.enabled = ${dmx.workspaces.collaborative.enabled}
dmx.workspaces.public.enabled = ${dmx.workspaces.public.enabled}
dmx.workspaces.common.enabled = ${dmx.workspaces.common.enabled}


## File Repository ##

# The file repository's base path: an absolute path leading to a directory, *no* slash at the end.
# This directory must exist. To enable the entire file system set "/". This is the default.
# Windows users: you can use slashes or backslashes, backslashes must be written as "\\" though.
# You can add a drive letter; if you do not "C:" is assumed.
#
# IMPORTANT: the default value ("/") is suited for a *local* (single-user) DMX installation only.
# For a *networked* installation on the other hand you MUST change this value.
# Otherwise DMX would make the server's entire file system HTTP accessible!
dmx.filerepo.path = ${dmx.filerepo.path}

# Set to "true" to put the file repository under access control.
# DM then creates a separate file repository for each workspace beneath the base path.
# This allow for e.g. private and collaborative file repositories.
# If set to "false" (the default) there is one public file repository shared by all users.
# Use this also for a local single-user DMX installation.
#
# IMPORTANT: the default value ("false") is suited for a *local* (single-user) DMX installation.
# For a *networked* (multi-user) installation on the other hand, you might want change this value to "true",
# unless you deliberately want provide a public file repository.
dmx.filerepo.per_workspace = ${dmx.filerepo.per_workspace}

# Standard disk quota (for file uploads) allocated to each user (in MB).
# Set -1 for no disk quota (unlimited uploads). This is the default.
# Note 1: DMX admins can configure individual (per-user) disk quotas via Webclient.
# Note 2: file upload relies on the "DMX File Upload" plugin (see https://dmx.berlin/plugins/).
dmx.filerepo.disk_quota = ${dmx.filerepo.disk_quota}


## Hot Deployment ##

# DMX plugins (jar files) from this directory are hot deployed (like any other OSGi bundle).
# You can add further directories here, separated by comma. Also you can remove the standard directory
# ("bundle-deploy") if you like.
# Spaces, tabs, and line breaks are allowed. IMPORTANT: line breaks must be escaped with backslash (\).
felix.fileinstall.dir = ${felix.fileinstall.dir}


## Host ##

# The URL (protocol, host, port) this DMX installation is accessible from "outside".
# Some DMX plugins make use of this value when creating public DMX URLs.
# This setting is of particular interest when DMX runs behind a reverse proxy.
dmx.host.url = ${dmx.host.url}


## Webservice ##

# Only these 2 values are supported:
#     /     For use with Apache Felix HTTP (the default)
#     /*    For use with OPS4J Pax Web
dmx.webservice.path = ${dmx.webservice.path}


## Database ##

dmx.database.path = ${dmx.database.path}


## Logging ##

java.util.logging.config.file = ${java.util.logging.config.file}

# To see any Felix/File Install logging set the level to at least 4
felix.log.level = ${felix.log.level}
felix.fileinstall.log.level = ${felix.fileinstall.log.level}


## Encoding ##

file.encoding = UTF-8


## OSGi Container ##

org.osgi.framework.bootdelegation = ${org.osgi.framework.bootdelegation}
org.osgi.framework.storage = bundle-cache
felix.auto.deploy.action = install,start
